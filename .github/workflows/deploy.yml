name: Deploy to Elastic Beanstalk (Docker)

on:
  push:
    branches:
      - deploy  # main 브랜치에 푸시될 때만 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials   # AWS 자격 증명 설정 단계
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Log in to Amazon ECR
      run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    
    - name: Build Docker image and run Alembic migrations
      run: |
            docker build --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}:latest .
            docker run --env DATABASE_URL=${{ secrets.DATABASE_URL }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}:latest alembic upgrade head
    
    - name: Push Docker image to Amazon ECR
      run: |
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}:latest
    
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: fastapi
        environment_name: Fastapi-env-1
        version_label: ${{ github.sha }}
        region: ${{ secrets.AWS_REGION }}
        s3_bucket: ${{ secrets.BUCKET_NAME }}
        deployment_package: Dockerrun.aws.json  # 배포 파일 설정 deployment_package: Dockerrun.aws.json  # 배포 파일 설정
        use_existing_version_if_available: true  # 기존 버전이 존재할 경우 재사용